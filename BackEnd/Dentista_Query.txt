CREATE SCHEMA DENTISTA;

USE DENTISTA;

CREATE TABLE MANAGER
(
  MANAGER_ID INT NOT NULL AUTO_INCREMENT,
  MANAGER_Fname VARCHAR(50) NOT NULL,
  MANAGER_Lname VARCHAR(50) NOT NULL,
  MANAGER_EMAIL VARCHAR(255) NOT NULL,
  MANAGER_PASSWORD VARCHAR(15) NOT NULL,
  MANAGEMENT_TYPE VARCHAR(15) NOT NULL,
  AREA_OF_MANAGEMENT VARCHAR(255) NOT NULL,
  PRIMARY KEY (MANAGER_ID),
  UNIQUE (MANAGER_EMAIL)
);

CREATE TABLE STORE
(
  STORE_ID INT NOT NULL AUTO_INCREMENT,
  STORE_NAME VARCHAR(100) NOT NULL,
  EMAIL VARCHAR(255) NOT NULL,
  PASSWORD VARCHAR(15) NOT NULL,
  PHONE_NUMBER VARCHAR(15) NOT NULL,
  CREDIT_CARD_NUMBER VARCHAR(20) NOT NULL,
  PRIMARY KEY (STORE_ID),
  UNIQUE (EMAIL),
  UNIQUE (PHONE_NUMBER)
);

CREATE TABLE STORE_BRANCH
(
  STORE_ID INT NOT NULL,
  ADDRESS VARCHAR(255) NOT NULL,
  REGION VARCHAR(50) NOT NULL,
  CITY VARCHAR(50) NOT NULL,
  ZIP_CODE INT NOT NULL,
  MANAGER_ID INT ,
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (MANAGER_ID) REFERENCES MANAGER(MANAGER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
  UNIQUE (ADDRESS)
);

CREATE TABLE DENTIST
(
  DENTIST_ID INT NOT NULL AUTO_INCREMENT,
  DENTIST_Fname VARCHAR(50) NOT NULL,
  DENTIST_LNAME VARCHAR(50) NOT NULL,
  DENTIST_EMAIL VARCHAR(255) NOT NULL,
  DENTIST_PASSWORD VARCHAR(15) NOT NULL,
  DENTIST_PHONE_NUMBER VARCHAR(15) NOT NULL,
  DENTIST_ADDRESS VARCHAR(255) NOT NULL,
  DENTIST_ZIP_CODE INT NOT NULL,
  DENTIST_REGION VARCHAR(50) NOT NULL,
  DENTIST_CITY VARCHAR(50) NOT NULL,
  DENTIST_CREDIT_CARD_NUMBER VARCHAR(20) NOT NULL,
  DENTIST_IMAGE_URL VARCHAR(255),
  PRIMARY KEY (DENTIST_ID),
  UNIQUE (DENTIST_EMAIL),
  UNIQUE (DENTIST_PHONE_NUMBER)
);

CREATE TABLE DELIVERY
(
  DELIVERY_ID INT NOT NULL AUTO_INCREMENT,
  DELIVERY_Fname VARCHAR(50) NOT NULL,
  DELIVERY_Lname VARCHAR(50) NOT NULL,
  DELIVERY_EMAIL VARCHAR(255) NOT NULL,
  DELIVERY_PASSWORD VARCHAR(15) NOT NULL,
  DELIVERY_CREDIT_CARD_NUMBER VARCHAR(20) NOT NULL,
  AREA VARCHAR(50) NOT NULL,
  VECHILE_LICENCE VARCHAR(50) NOT NULL,
  VECHILE_MODEL VARCHAR(50) NOT NULL,
  RATE INT,
  AVAILABLE INT NOT NULL,
  MANAGER_ID INT ,
  PRIMARY KEY (DELIVERY_ID),
  FOREIGN KEY (MANAGER_ID) REFERENCES MANAGER(MANAGER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
  UNIQUE (DELIVERY_EMAIL),
  UNIQUE (VECHILE_LICENCE)
);

CREATE TABLE PRODUCT
(
  PRODUCT_ID INT NOT NULL AUTO_INCREMENT,
  PRODUCT_NAME VARCHAR(255) NOT NULL,
  CATEGORY VARCHAR(255),
  BRAND VARCHAR(255) ,
  DESCRIPTION VARCHAR(500),
  PRICE INT NOT NULL,
  SELLING_PRICE INT NOT NULL,
  TOTAL_PRICE INT,
  IMAGE_URL VARCHAR(255) ,
  PRIMARY KEY (PRODUCT_ID)

);

CREATE TABLE ORDERS
(
  ORDER_ID INT NOT NULL AUTO_INCREMENT,
  DENTIST_ID INT NOT NULL,
  DELIVERY_ID INT,
  TOTAL_COST INT NOT NULL,
  PRIMARY KEY (ORDER_ID)
);

CREATE TABLE VIRTUAL_BANK
(
  CARD_NUMBER VARCHAR(20) NOT NULL,
  FIRST_NAME VARCHAR(50) NOT NULL,
  LAST_NAME VARCHAR(50) NOT NULL,
  EMAIL VARCHAR(255) NOT NULL,
  PASSWORD VARCHAR(15) NOT NULL,
  NATIONAL_ID VARCHAR(14) NOT NULL,
  SECURITY_CODE INT NOT NULL,
  EXPIRATION_MONTH INT NOT NULL,
  EXPIRATION_YEAR INT NOT NULL,
  CREDIT FLOAT NOT NULL,
  PRIMARY KEY (CARD_NUMBER),
  UNIQUE (EMAIL)
);

CREATE TABLE DELIVERY_VERIFICATION(
DELIVERY_VERIFICATION_ID INT AUTO_INCREMENT NOT NULL,
DELIVERY_ID INT NOT NULL,

PRIMARY KEY (DELIVERY_VERIFICATION_ID),

FOREIGN KEY (DELIVERY_ID) REFERENCES DELIVERY(DELIVERY_ID)
);

CREATE TABLE STORE_VERIFICATION(
STORE_VERIFICATION_ID INT AUTO_INCREMENT NOT NULL,
STORE_ID INT NOT NULL,
PRIMARY KEY (STORE_VERIFICATION_ID),

FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID)
);

CREATE TABLE STORE_PRODUCT
(
  PRODUCT_RATE INT NOT NULL,
  NUMBER_OF_UNITS INT NOT NULL,
  STORE_ID INT NOT NULL,
  PRODUCT_ID INT NOT NULL,
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE ORDER_PRODUCT
(
  NUMBER_OF_UNITS INT NOT NULL,
  ORDER_ID INT NOT NULL,
  STORE_ID INT NOT NULL,
  PRODUCT_ID INT NOT NULL,
  FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE DENTIST_DELIVERY_CHAT
(
  MESSAGES VARCHAR(255) NOT NULL,
  DENTIST_ID INT NOT NULL,
  DELIVERY_ID INT NOT NULL,
  SENDER_ID INT NOT NULL,
  SENDER_TYPE VARCHAR(30) NOT NULL,
  FOREIGN KEY (DENTIST_ID) REFERENCES DENTIST(DENTIST_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (DELIVERY_ID) REFERENCES DELIVERY(DELIVERY_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE MANAGER_STORE_CHAT
(
  MESSAGES VARCHAR(255) NOT NULL,
  MANAGER_ID INT NOT NULL,
  STORE_ID INT NOT NULL,
  SENDER_ID INT NOT NULL,
  SENDER_TYPE VARCHAR(30) NOT NULL,
  FOREIGN KEY (MANAGER_ID) REFERENCES MANAGER(MANAGER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE MANAGER_DELIVERY_CHAT
(
  MESSAGES VARCHAR(255) NOT NULL,
  MANAGER_ID INT NOT NULL,
  DELIVERY_ID INT NOT NULL,
  SENDER_ID INT NOT NULL,
  SENDER_TYPE VARCHAR(30) NOT NULL,
  FOREIGN KEY (MANAGER_ID) REFERENCES MANAGER(MANAGER_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (DELIVERY_ID) REFERENCES DELIVERY(DELIVERY_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE STORE_DELIVERY_CHAT
(
  MESSAGES VARCHAR(255) NOT NULL,
  STORE_ID INT NOT NULL,
  DELIVERY_ID INT NOT NULL,
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (DELIVERY_ID) REFERENCES DELIVERY(DELIVERY_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE DENTIST_STORE_CHAT
(
  MESSAGES VARCHAR(255) NOT NULL,
  DENTIST_ID INT NOT NULL,
  STORE_ID INT NOT NULL,
  SENDER_ID INT NOT NULL,
  FOREIGN KEY (DENTIST_ID) REFERENCES DENTIST(DENTIST_ID) ON DELETE CASCADE  ON UPDATE CASCADE,
  FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE REVIEW_PRODUCT(
REVIEW_ID INT AUTO_INCREMENT NOT NULL,
DENTIST_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL,
REVIEW VARCHAR(500) NOT NULL,
PRIMARY KEY (REVIEW_ID),
FOREIGN KEY (DENTIST_ID) REFERENCES DENTIST(DENTIST_ID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE REVIEW_DELIVERY(
REVIEW_ID INT AUTO_INCREMENT NOT NULL,
DENTIST_ID INT NOT NULL,
DELIVERY_ID INT NOT NULL,
REVIEW VARCHAR(500) NOT NULL,
PRIMARY KEY (REVIEW_ID),
FOREIGN KEY (DENTIST_ID) REFERENCES DENTIST(DENTIST_ID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (DELIVERY_ID) REFERENCES DELIVERY(DELIVERY_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE GIFT_CARDS(
GIFT_CARD_ID INT AUTO_INCREMENT NOT NULL,
GIFT_CARD_NAME VARCHAR(100) NOT NULL,
DISCOUNT FLOAT,
CARD_PRICE FLOAT,
TOTAL_TIMES_USES INT,
PRIMARY KEY (GIFT_CARD_ID)
);

CREATE TABLE HAS_GIFT_CARD(
DENTIST_ID INT NOT NULL,
GIFT_CARD_ID INT NOT NULL,
EXPIRATION_DATE DATE NOT NULL,
REMAINING_USES INT,
FOREIGN KEY (DENTIST_ID) REFERENCES DENTIST(DENTIST_ID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (GIFT_CARD_ID) REFERENCES GIFT_CARDS(GIFT_CARD_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE GIFT_PRODUCTS(
GIFT_CARD_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL, 
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (GIFT_CARD_ID) REFERENCES GIFT_CARDS(GIFT_CARD_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE OFFERS(
OFFER_ID INT AUTO_INCREMENT NOT NULL,
PRODUCT_ID INT NOT NULL,
STORE_ID INT,
DISCOUNT FLOAT NOT NULL,
PRICE_AFTER FLOAT,
PRIMARY KEY(OFFER_ID),
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (STORE_ID) REFERENCES STORE(STORE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

ALTER TABLE ORDERS ADD SHIPMENT_STATUS VARCHAR(50);

CREATE TABLE SCEDULE_ORDER(
SCEDULE_ORDER_ID INT AUTO_INCREMENT NOT NULL,
DENTIST_ID INT NOT NULL,
ORDER_ID INT NOT NULL, 
DURATION VARCHAR(20) NOT NULL,
PRIMARY KEY (SCEDULE_ORDER_ID),
FOREIGN KEY (DENTIST_ID) REFERENCES DENTIST(DENTIST_ID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (ORDER_ID) REFERENCES ORDERS(ORDER_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE SCEDULE_PRODUCT(
SCEDULE_PRODUCT_ID INT AUTO_INCREMENT NOT NULL,
DENTIST_ID INT NOT NULL,
PRODUCT_ID INT NOT NULL, 
DURATION VARCHAR(20) NOT NULL,
PRIMARY KEY (SCEDULE_PRODUCT_ID),
FOREIGN KEY (DENTIST_ID) REFERENCES DENTIST(DENTIST_ID) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT(PRODUCT_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE CATEGORY(
CATEGORY_ID INT AUTO_INCREMENT NOT NULL,
CATEGORY_NAME VARCHAR(50) NOT NULL,
CATEGORY_DESCRIPTION VARCHAR(500) NOT NULL,
PRIMARY KEY (CATEGORY_ID)
);

ALTER TABLE PRODUCT DROP COLUMN CATEGORY;
ALTER TABLE PRODUCT ADD CATEGORY_ID INT;
ALTER TABLE PRODUCT ADD FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(CATEGORY_ID) ON DELETE CASCADE ON UPDATE CASCADE;
